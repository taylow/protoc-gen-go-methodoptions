package main

const (
	goTemplate = `
// Code generated by protoc-gen-go-methodoptions. DO NOT EDIT.
// source file:   {{ .FileName }}
// proto package: {{ .Package }}

package {{ .GoPackage }}

{{ if .Imports }}
import (
  {{- range $alias, $path := .Imports }}
  {{ $alias }} "{{ $path }}"
  {{- end }}
)
{{ end }}

{{ if .Services }}
{{ range $service := .Services }}
{{ if $service.Methods }}
// {{ $service.Name }}

const (
  {{- range $method := $service.Methods }}
    {{- range $key, $option := $method.Options }}
       {{- if eq $option.Type "enum" }}
  {{ $service.Name }}_{{ $method.Name }}_{{ $key }} = {{ $option.Package }}.{{ $key }}_{{ $option.Value }}
      {{- else if eq $option.Type "string" }}
      {{ $service.Name }}_{{ $method.Name }}_{{ $key }} = "{{ $option.Value }}"
      {{- else if eq $option.Type "int32" }}
      {{ $service.Name }}_{{ $method.Name }}_{{ $key }} = {{ $option.Value }}
      {{- else }}
      // {{ $option.Type }} is not currently supported ({{ $service.Name }}_{{ $method.Name }}_{{ $key }} = {{ $option.Value }})
      {{- end }}
    {{- end }}
  {{- end}}
)
{{ end }}

  {{ range $method := $service.Methods }}
    {{- range $key, $option := $method.Options }}
      {{ if eq $option.Type "enum" }}
// {{ $method.Name }}{{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }}.
func (Unimplemented{{ $service.Name }}Server) {{ $method.Name }}{{ $option.Name }}() {{ $option.Package }}.{{ $option.Name }} {
 return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

// {{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }} request.
func (*{{ if $method.RequestPackage }}{{ $method.RequestPackage }}.{{ end }}{{ $method.RequestName }}) {{ $option.Name }}() {{ $option.Package }}.{{ $option.Name }} {
 return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

      {{- else if eq $option.Type "string" }}
// {{ $method.Name }}{{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }}.
func (Unimplemented{{ $service.Name }}Server) {{ $method.Name }}{{ $option.Name }}() {{ $option.Type }} {
  return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

// {{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }} request.
func (*{{ if $method.RequestPackage }}{{ $method.RequestPackage }}.{{ end }}{{ $method.RequestName }}) {{ $option.Name }}() {{ $option.Type }} {
  return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

      {{- else if eq $option.Type "int32" }}
// {{ $method.Name }}{{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }}.
func (Unimplemented{{ $service.Name }}Server) {{ $method.Name }}{{ $option.Name }}() {{ $option.Type }} {
  return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

// {{ $option.Name }} returns the {{ $option.Name }} for {{ $method.Name }} request.
func (*{{ if $method.RequestPackage }}{{ $method.RequestPackage }}.{{ end }}{{ $method.RequestName }}) {{ $option.Name }}() {{ $option.Type }} {
  return {{ $service.Name }}_{{ $method.Name }}_{{ $key }}
}

      {{- end }}
    {{- end }}
  {{ end }}
{{ end }}
{{ end }}
`
)
